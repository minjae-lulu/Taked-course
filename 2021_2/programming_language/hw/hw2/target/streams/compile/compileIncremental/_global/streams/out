[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set(D:\coding\Taked-course\2021_2\programming_language\hw\hw2\src\main\scala\Parsers.scala, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\src\main\scala\Hw2.scala, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\src_managed\main\antlr4\Hw2\IntParserAntlr4.java, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\src_managed\main\antlr4\Hw2\LetRecParserBaseVisitor.java, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\src_managed\main\antlr4\Hw2\LetRecParser.java, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\src_managed\main\antlr4\Hw2\IntParserAntlr4BaseVisitor.java, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\src_managed\main\antlr4\Hw2\LetRecParserVisitor.java, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\src_managed\main\antlr4\Hw2\IntLexer.java, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\src_managed\main\antlr4\Hw2\IntParserAntlr4Visitor.java, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\src_managed\main\antlr4\Hw2\LetRecLexer.java)[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(D:\local_coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\src_managed\main\antlr4\Hw2\IntLexer.java, D:\local_coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\src_managed\main\antlr4\Hw2\LetRecParserVisitor.java, D:\local_coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\src_managed\main\antlr4\Hw2\IntParserAntlr4BaseVisitor.java, D:\local_coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\src_managed\main\antlr4\Hw2\LetRecLexer.java, D:\local_coding\Taked-course\2021_2\programming_language\hw\hw2\src\main\scala\Hw2.scala, D:\local_coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\src_managed\main\antlr4\Hw2\LetRecParserBaseVisitor.java, D:\local_coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\src_managed\main\antlr4\Hw2\IntParserAntlr4.java, D:\local_coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\src_managed\main\antlr4\Hw2\LetRecParser.java, D:\local_coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\src_managed\main\antlr4\Hw2\IntParserAntlr4Visitor.java, D:\local_coding\Taked-course\2021_2\programming_language\hw\hw2\src\main\scala\Parsers.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set(D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\LetRecParserVisitor.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\Hw2App$.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\BoolVal$.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\Paren.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\Sub.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\Proc$.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\LetRecParserBaseVisitor.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\IntParser$.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\LetRecVisitor.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\Var.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\LetRecParser$IdContext.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\PCall$.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\IntConst.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\Val.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\IntMul.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\IntParserAntlr4$ProgramContext.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\IntMul$.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\ProcVal.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\Add$.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\Env$.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\Equal.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\IntInterpreter$.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\IntAdd.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\LetRecParser$ProgramContext.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\IntVal$.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\LetRecInterpreter$.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\ProcVal$.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\IntPow.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\RecProcVal.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\LetRecLexer.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\IntParserAntlr4$ExprContext.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\LetRecParserDriver.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\IntConst$.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\Let$.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\IntPi$.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\Add.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\Var$.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\Let.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\Hw2App$delayedInit$body.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\Program.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\IntVar$.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\IntParserAntlr4$IdContext.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\IntLexer.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\IntSub.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\IntVar.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\Proc.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\IntParserAntlr4.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\Iszero.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\Const.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\Hw2\package.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\IntParserAntlr4$IntegerContext.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\Paren$.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\Const$.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\BoolVal.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\Iszero$.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\IntPow$.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\Ite$.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\IntParserAntlr4BaseVisitor.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\IntSub$.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\LetRecParser$ExprContext.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\Equal$.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\IntParserAntlr4Visitor.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\LetRecParser.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\LetRecParser$IntegerContext.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\RecProcVal$.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\Sub$.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\Hw2\package$.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\PCall.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\LetRecInterpreter.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\LetRecParserDriver$.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\IntSigma$.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\IntSigma.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\IntPi.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\IntParser.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\IntInterpreter.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\IntVal.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\Ite.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\IntExpr.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\LetRecToString$.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\IntVisitor.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\IntAdd$.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\Expr.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\LetRec$.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\Env.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\LetRec.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\LetRecToString.class, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes\Hw2\Hw2App.class)[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set(C:\Users\leeminjae\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\antlr\antlr4-runtime\4.8-1\antlr4-runtime-4.8-1.jar, C:\Users\User\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\antlr\antlr4\4.8-1\antlr4-4.8-1.jar, C:\Users\User\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\com\lihaoyi\sourcecode_2.13\0.1.7\sourcecode_2.13-0.1.7.jar, C:\Users\leeminjae\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\antlr\ST4\4.3\ST4-4.3.jar, C:\Users\User\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\antlr\antlr-runtime\3.5.2\antlr-runtime-3.5.2.jar, C:\Users\leeminjae\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\com\lihaoyi\sourcecode_2.13\0.1.7\sourcecode_2.13-0.1.7.jar, C:\Users\leeminjae\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala-library\2.13.3\scala-library-2.13.3.jar, C:\Users\leeminjae\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\abego\treelayout\org.abego.treelayout.core\1.0.3\org.abego.treelayout.core-1.0.3.jar, C:\Users\leeminjae\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\glassfish\javax.json\1.0.4\javax.json-1.0.4.jar, C:\Users\User\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\abego\treelayout\org.abego.treelayout.core\1.0.3\org.abego.treelayout.core-1.0.3.jar, C:\Users\User\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala-library\2.13.3\scala-library-2.13.3.jar, C:\Users\User\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\antlr\antlr4-runtime\4.8-1\antlr4-runtime-4.8-1.jar, C:\Users\User\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\com\ibm\icu\icu4j\61.1\icu4j-61.1.jar, C:\Users\User\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\glassfish\javax.json\1.0.4\javax.json-1.0.4.jar, C:\Users\User\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\com\lihaoyi\geny_2.13\0.4.2\geny_2.13-0.4.2.jar, C:\Users\leeminjae\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\antlr\antlr4\4.8-1\antlr4-4.8-1.jar, C:\Users\leeminjae\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\com\ibm\icu\icu4j\61.1\icu4j-61.1.jar, C:\Users\User\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\com\lihaoyi\fastparse_2.13\2.2.2\fastparse_2.13-2.2.2.jar, C:\Users\leeminjae\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\com\lihaoyi\fastparse_2.13\2.2.2\fastparse_2.13-2.2.2.jar, C:\Users\leeminjae\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\com\lihaoyi\geny_2.13\0.4.2\geny_2.13-0.4.2.jar, C:\Users\leeminjae\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\antlr\antlr-runtime\3.5.2\antlr-runtime-3.5.2.jar, C:\Users\User\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\antlr\ST4\4.3\ST4-4.3.jar)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(Hw2.Program, Hw2.LetRec, Hw2.LetRecParserBaseVisitor, Hw2.IntVar, Hw2.LetRecParserDriver, Hw2.IntConst, Hw2.LetRecParser.IntegerContext, Hw2.IntParserAntlr4, Hw2.Expr, Hw2.IntParserAntlr4.ExprContext, Hw2.Equal, Hw2.PCall, Hw2.IntAdd, Hw2.IntVisitor, Hw2.IntParserAntlr4.IdContext, Hw2.LetRecParser.ProgramContext, Hw2.RecProcVal, Hw2.BoolVal, Hw2.IntPow, Hw2.Val, Hw2.Sub, Hw2.LetRecParserVisitor, Hw2.LetRecLexer, Hw2.Add, Hw2.IntParserAntlr4Visitor, Hw2.IntParserAntlr4BaseVisitor, Hw2.IntParserAntlr4.ProgramContext, Hw2.LetRecInterpreter, Hw2.LetRecToString, Hw2.Paren, Hw2.IntMul, Hw2.IntExpr, Hw2.Iszero, Hw2.IntLexer, Hw2.IntParserAntlr4.IntegerContext, Hw2.Hw2App, Hw2.Let, Hw2.Var, Hw2.LetRecParser, Hw2.IntParser, Hw2.Const, Hw2.IntPi, Hw2.IntInterpreter, Hw2.LetRecVisitor, Hw2.IntSub, Hw2.LetRecParser.IdContext, Hw2.Proc, Hw2.Env, Hw2.LetRecParser.ExprContext, Hw2.Ite, Hw2.Hw2.package, Hw2.IntVal, Hw2.IntSigma, Hw2.ProcVal)[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set(D:\coding\Taked-course\2021_2\programming_language\hw\hw2\src\main\scala\Parsers.scala, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\src\main\scala\Hw2.scala, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\src_managed\main\antlr4\Hw2\IntParserAntlr4.java, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\src_managed\main\antlr4\Hw2\LetRecParserBaseVisitor.java, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\src_managed\main\antlr4\Hw2\LetRecParser.java, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\src_managed\main\antlr4\Hw2\IntParserAntlr4BaseVisitor.java, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\src_managed\main\antlr4\Hw2\LetRecParserVisitor.java, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\src_managed\main\antlr4\Hw2\IntLexer.java, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\src_managed\main\antlr4\Hw2\IntParserAntlr4Visitor.java, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\src_managed\main\antlr4\Hw2\LetRecLexer.java)[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set(D:\coding\Taked-course\2021_2\programming_language\hw\hw2\src\main\scala\Parsers.scala, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\src\main\scala\Hw2.scala, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\src_managed\main\antlr4\Hw2\IntParserAntlr4.java, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\src_managed\main\antlr4\Hw2\LetRecParserBaseVisitor.java, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\src_managed\main\antlr4\Hw2\LetRecParser.java, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\src_managed\main\antlr4\Hw2\IntParserAntlr4BaseVisitor.java, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\src_managed\main\antlr4\Hw2\LetRecParserVisitor.java, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\src_managed\main\antlr4\Hw2\IntLexer.java, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\src_managed\main\antlr4\Hw2\IntParserAntlr4Visitor.java, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\src_managed\main\antlr4\Hw2\LetRecLexer.java)[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(Hw2.Program, Hw2.LetRec, Hw2.LetRecParserBaseVisitor, Hw2.IntVar, Hw2.LetRecParserDriver, Hw2.IntConst, Hw2.LetRecParser.IntegerContext, Hw2.IntParserAntlr4, Hw2.Expr, Hw2.IntParserAntlr4.ExprContext, Hw2.Equal, Hw2.PCall, Hw2.IntAdd, Hw2.IntVisitor, Hw2.IntParserAntlr4.IdContext, Hw2.LetRecParser.ProgramContext, Hw2.RecProcVal, Hw2.BoolVal, Hw2.IntPow, Hw2.Val, Hw2.Sub, Hw2.LetRecParserVisitor, Hw2.LetRecLexer, Hw2.Add, Hw2.IntParserAntlr4Visitor, Hw2.IntParserAntlr4BaseVisitor, Hw2.IntParserAntlr4.ProgramContext, Hw2.LetRecInterpreter, Hw2.LetRecToString, Hw2.Paren, Hw2.IntMul, Hw2.IntExpr, Hw2.Iszero, Hw2.IntLexer, Hw2.IntParserAntlr4.IntegerContext, Hw2.Hw2App, Hw2.Let, Hw2.Var, Hw2.LetRecParser, Hw2.IntParser, Hw2.Const, Hw2.IntPi, Hw2.IntInterpreter, Hw2.LetRecVisitor, Hw2.IntSub, Hw2.LetRecParser.IdContext, Hw2.Proc, Hw2.Env, Hw2.LetRecParser.ExprContext, Hw2.Ite, Hw2.Hw2.package, Hw2.IntVal, Hw2.IntSigma, Hw2.ProcVal)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(D:\coding\Taked-course\2021_2\programming_language\hw\hw2\src\main\scala\Parsers.scala, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\src\main\scala\Hw2.scala, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\src_managed\main\antlr4\Hw2\IntParserAntlr4.java, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\src_managed\main\antlr4\Hw2\LetRecParserBaseVisitor.java, D:\local_coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\src_managed\main\antlr4\Hw2\IntLexer.java, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\src_managed\main\antlr4\Hw2\LetRecParser.java, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\src_managed\main\antlr4\Hw2\IntParserAntlr4BaseVisitor.java, D:\local_coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\src_managed\main\antlr4\Hw2\LetRecParserVisitor.java, D:\local_coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\src_managed\main\antlr4\Hw2\IntParserAntlr4BaseVisitor.java, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\src_managed\main\antlr4\Hw2\LetRecParserVisitor.java, D:\local_coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\src_managed\main\antlr4\Hw2\LetRecLexer.java, D:\local_coding\Taked-course\2021_2\programming_language\hw\hw2\src\main\scala\Hw2.scala, D:\local_coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\src_managed\main\antlr4\Hw2\LetRecParserBaseVisitor.java, D:\local_coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\src_managed\main\antlr4\Hw2\IntParserAntlr4.java, D:\local_coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\src_managed\main\antlr4\Hw2\LetRecParser.java, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\src_managed\main\antlr4\Hw2\IntLexer.java, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\src_managed\main\antlr4\Hw2\IntParserAntlr4Visitor.java, D:\local_coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\src_managed\main\antlr4\Hw2\IntParserAntlr4Visitor.java, D:\coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\src_managed\main\antlr4\Hw2\LetRecLexer.java, D:\local_coding\Taked-course\2021_2\programming_language\hw\hw2\src\main\scala\Parsers.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Hw2.Program, Hw2.LetRec, Hw2.LetRecParserBaseVisitor, Hw2.IntVar, Hw2.LetRecParserDriver, Hw2.IntConst, Hw2.LetRecParser.IntegerContext, Hw2.IntParserAntlr4, Hw2.Expr, Hw2.IntParserAntlr4.ExprContext, Hw2.Equal, Hw2.PCall, Hw2.IntAdd, Hw2.IntVisitor, Hw2.IntParserAntlr4.IdContext, Hw2.LetRecParser.ProgramContext, Hw2.RecProcVal, Hw2.BoolVal, Hw2.IntPow, Hw2.Val, Hw2.Sub, Hw2.LetRecParserVisitor, Hw2.LetRecLexer, Hw2.Add, Hw2.IntParserAntlr4Visitor, Hw2.IntParserAntlr4BaseVisitor, Hw2.IntParserAntlr4.ProgramContext, Hw2.LetRecInterpreter, Hw2.LetRecToString, Hw2.Paren, Hw2.IntMul, Hw2.IntExpr, Hw2.Iszero, Hw2.IntLexer, Hw2.IntParserAntlr4.IntegerContext, Hw2.Hw2App, Hw2.Let, Hw2.Var, Hw2.LetRecParser, Hw2.IntParser, Hw2.Const, Hw2.IntPi, Hw2.IntInterpreter, Hw2.LetRecVisitor, Hw2.IntSub, Hw2.LetRecParser.IdContext, Hw2.Proc, Hw2.Env, Hw2.LetRecParser.ExprContext, Hw2.Ite, Hw2.Hw2.package, Hw2.IntVal, Hw2.IntSigma, Hw2.ProcVal[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding Hw2.Expr by Hw2.Program[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding Hw2.LetRec by Hw2.Expr[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding Hw2.Equal by Hw2.Expr[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding Hw2.PCall by Hw2.Expr[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding Hw2.Sub by Hw2.Expr[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding Hw2.Add by Hw2.Expr[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding Hw2.Paren by Hw2.Expr[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding Hw2.Iszero by Hw2.Expr[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding Hw2.Let by Hw2.Expr[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding Hw2.Var by Hw2.Expr[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding Hw2.Const by Hw2.Expr[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding Hw2.Proc by Hw2.Expr[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding Hw2.Ite by Hw2.Expr[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding Hw2.LetRecVisitor by Hw2.LetRecParserBaseVisitor[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding Hw2.IntVal by Hw2.Val[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding Hw2.ProcVal by Hw2.Val[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding Hw2.IntPi by Hw2.IntExpr[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding Hw2.IntSub by Hw2.IntExpr[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding Hw2.IntSigma by Hw2.IntExpr[0m
[0m[[0m[0mdebug[0m] [0m[0mRecompiling all sources: number of invalidated sources > 50.0% of all sources[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 2 Scala sources and 8 Java sources to D:\local_coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.13:1.3.5:compile for Scala 2.13.3[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.13:1.3.5:compile for Scala 2.13.3[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 7bd8ec37 for Scala compiler version 2.13.3[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	C:\Users\User\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala-library\2.13.3\scala-library-2.13.3.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	D:\local_coding\Taked-course\2021_2\programming_language\hw\hw2\target\scala-2.13\classes;C:\Users\User\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\antlr\antlr4-runtime\4.8-1\antlr4-runtime-4.8-1.jar;C:\Users\User\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\com\lihaoyi\fastparse_2.13\2.2.2\fastparse_2.13-2.2.2.jar;C:\Users\User\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\antlr\antlr4\4.8-1\antlr4-4.8-1.jar;C:\Users\User\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\com\lihaoyi\sourcecode_2.13\0.1.7\sourcecode_2.13-0.1.7.jar;C:\Users\User\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\com\lihaoyi\geny_2.13\0.4.2\geny_2.13-0.4.2.jar;C:\Users\User\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\antlr\antlr-runtime\3.5.2\antlr-runtime-3.5.2.jar;C:\Users\User\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\antlr\ST4\4.3\ST4-4.3.jar;C:\Users\User\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\abego\treelayout\org.abego.treelayout.core\1.0.3\org.abego.treelayout.core-1.0.3.jar;C:\Users\User\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\glassfish\javax.json\1.0.4\javax.json-1.0.4.jar;C:\Users\User\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\com\ibm\icu\icu4j\61.1\icu4j-61.1.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 3.4474217 s[0m
[0m[[0m[0mdebug[0m] [0m[0mAttempting to call com.sun.tools.javac.api.JavacTool@e2aefe9 directly...[0m
[0m[[0m[0mdebug[0m] [0m[0mJava compilation took 0.5568935 s[0m
[0m[[0m[0mdebug[0m] [0m[0mJava analysis took 0.014009 s[0m
[0m[[0m[0mdebug[0m] [0m[0mJava compilation + analysis took 0.5768732 s[0m
[0m[[0m[0mdebug[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Hw2.IntParserAntlr4.IntegerContext...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Hw2.IntParserAntlr4.IntegerContext[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Hw2.IntParserAntlr4.IntegerContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of Hw2.IntVisitor: Set(UsedName(toString,[Default]), UsedName(getText,[Default]), UsedName(getChild,[Default]), UsedName(IntegerContext,[Default]), UsedName(getChildCount,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Hw2.IntParserAntlr4.IntegerContext,ModifiedNames(changes = UsedName(invokingState,[Default]), UsedName(toStringTree,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(getRuleContext,[Default]), UsedName(getStart,[Default]), UsedName(removeLastChild,[Default]), UsedName(getClass,[Default]), UsedName(getAltNumber,[Default]), UsedName(addErrorNode,[Default]), UsedName(toString,[Default]), UsedName(setAltNumber,[Default]), UsedName(getRuleContexts,[Default]), UsedName(hashCode,[Default]), UsedName(getToken,[Default]), UsedName(stop,[Default]), UsedName(depth,[Default]), UsedName(parent,[Default]), UsedName(getParent,[Default]), UsedName(equals,[Default]), UsedName(EMPTY,[Default]), UsedName(MINUS,[Default]), UsedName(exception,[Default]), UsedName(copyFrom,[Default]), UsedName(Hw2;IntParserAntlr4$IntegerContext;init;,[Default]), UsedName(start,[Default]), UsedName(getText,[Default]), UsedName(getChild,[Default]), UsedName(getPayload,[Default]), UsedName(getTokens,[Default]), UsedName(IntegerContext,[Default]), UsedName(children,[Default]), UsedName(addAnyChild,[Default]), UsedName(isEmpty,[Default]), UsedName(notify,[Default]), UsedName(addChild,[Default]), UsedName(getRuleIndex,[Default]), UsedName(enterRule,[Default]), UsedName(exitRule,[Default]), UsedName(setParent,[Default]), UsedName(accept,[Default]), UsedName(getSourceInterval,[Default]), UsedName(INT,[Default]), UsedName(getChildCount,[Default]), UsedName(getStop,[Default]), UsedName(toInfoString,[Default]))) invalidates 2 classes due to The Hw2.IntParserAntlr4.IntegerContext has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(invokingState,[Default]), UsedName(toStringTree,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(getRuleContext,[Default]), UsedName(getStart,[Default]), UsedName(removeLastChild,[Default]), UsedName(getClass,[Default]), UsedName(getAltNumber,[Default]), UsedName(addErrorNode,[Default]), UsedName(toString,[Default]), UsedName(setAltNumber,[Default]), UsedName(getRuleContexts,[Default]), UsedName(hashCode,[Default]), UsedName(getToken,[Default]), UsedName(stop,[Default]), UsedName(depth,[Default]), UsedName(parent,[Default]), UsedName(getParent,[Default]), UsedName(equals,[Default]), UsedName(EMPTY,[Default]), UsedName(MINUS,[Default]), UsedName(exception,[Default]), UsedName(copyFrom,[Default]), UsedName(Hw2;IntParserAntlr4$IntegerContext;init;,[Default]), UsedName(start,[Default]), UsedName(getText,[Default]), UsedName(getChild,[Default]), UsedName(getPayload,[Default]), UsedName(getTokens,[Default]), UsedName(IntegerContext,[Default]), UsedName(children,[Default]), UsedName(addAnyChild,[Default]), UsedName(isEmpty,[Default]), UsedName(notify,[Default]), UsedName(addChild,[Default]), UsedName(getRuleIndex,[Default]), UsedName(enterRule,[Default]), UsedName(exitRule,[Default]), UsedName(setParent,[Default]), UsedName(accept,[Default]), UsedName(getSourceInterval,[Default]), UsedName(INT,[Default]), UsedName(getChildCount,[Default]), UsedName(getStop,[Default]), UsedName(toInfoString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Hw2.IntParserAntlr4.IntegerContext)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(Hw2.IntVisitor)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Hw2.LetRecParser.IdContext...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Hw2.LetRecParser.IdContext[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Hw2.LetRecParser.IdContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of Hw2.LetRecVisitor: Set(UsedName(toString,[Default]), UsedName(IdContext,[Default]), UsedName(getText,[Default]), UsedName(getChild,[Default]), UsedName(getChildCount,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Hw2.LetRecParser.IdContext,ModifiedNames(changes = UsedName(invokingState,[Default]), UsedName(toStringTree,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(getRuleContext,[Default]), UsedName(getStart,[Default]), UsedName(removeLastChild,[Default]), UsedName(getClass,[Default]), UsedName(getAltNumber,[Default]), UsedName(addErrorNode,[Default]), UsedName(toString,[Default]), UsedName(setAltNumber,[Default]), UsedName(getRuleContexts,[Default]), UsedName(hashCode,[Default]), UsedName(getToken,[Default]), UsedName(stop,[Default]), UsedName(depth,[Default]), UsedName(parent,[Default]), UsedName(getParent,[Default]), UsedName(equals,[Default]), UsedName(EMPTY,[Default]), UsedName(Hw2;LetRecParser$IdContext;init;,[Default]), UsedName(exception,[Default]), UsedName(copyFrom,[Default]), UsedName(start,[Default]), UsedName(IdContext,[Default]), UsedName(getText,[Default]), UsedName(getChild,[Default]), UsedName(getPayload,[Default]), UsedName(getTokens,[Default]), UsedName(children,[Default]), UsedName(addAnyChild,[Default]), UsedName(isEmpty,[Default]), UsedName(notify,[Default]), UsedName(addChild,[Default]), UsedName(getRuleIndex,[Default]), UsedName(enterRule,[Default]), UsedName(exitRule,[Default]), UsedName(setParent,[Default]), UsedName(accept,[Default]), UsedName(getSourceInterval,[Default]), UsedName(getChildCount,[Default]), UsedName(ID,[Default]), UsedName(getStop,[Default]), UsedName(toInfoString,[Default]))) invalidates 2 classes due to The Hw2.LetRecParser.IdContext has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(invokingState,[Default]), UsedName(toStringTree,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(getRuleContext,[Default]), UsedName(getStart,[Default]), UsedName(removeLastChild,[Default]), UsedName(getClass,[Default]), UsedName(getAltNumber,[Default]), UsedName(addErrorNode,[Default]), UsedName(toString,[Default]), UsedName(setAltNumber,[Default]), UsedName(getRuleContexts,[Default]), UsedName(hashCode,[Default]), UsedName(getToken,[Default]), UsedName(stop,[Default]), UsedName(depth,[Default]), UsedName(parent,[Default]), UsedName(getParent,[Default]), UsedName(equals,[Default]), UsedName(EMPTY,[Default]), UsedName(Hw2;LetRecParser$IdContext;init;,[Default]), UsedName(exception,[Default]), UsedName(copyFrom,[Default]), UsedName(start,[Default]), UsedName(IdContext,[Default]), UsedName(getText,[Default]), UsedName(getChild,[Default]), UsedName(getPayload,[Default]), UsedName(getTokens,[Default]), UsedName(children,[Default]), UsedName(addAnyChild,[Default]), UsedName(isEmpty,[Default]), UsedName(notify,[Default]), UsedName(addChild,[Default]), UsedName(getRuleIndex,[Default]), UsedName(enterRule,[Default]), UsedName(exitRule,[Default]), UsedName(setParent,[Default]), UsedName(accept,[Default]), UsedName(getSourceInterval,[Default]), UsedName(getChildCount,[Default]), UsedName(ID,[Default]), UsedName(getStop,[Default]), UsedName(toInfoString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Hw2.LetRecParser.IdContext)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(Hw2.LetRecVisitor)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Hw2.IntParserAntlr4.ExprContext...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Hw2.IntParserAntlr4.ExprContext[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Hw2.IntParserAntlr4.ExprContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of Hw2.IntVisitor: Set(UsedName(ExprContext,[Default]), UsedName(toString,[Default]), UsedName(getText,[Default]), UsedName(getChild,[Default]), UsedName(expr,[Default]), UsedName(getChildCount,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of Hw2.IntParser: Set(UsedName(ExprContext,[Default]), UsedName(expr,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Hw2.IntParserAntlr4.ExprContext,ModifiedNames(changes = UsedName(invokingState,[Default]), UsedName(toStringTree,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(getRuleContext,[Default]), UsedName(getStart,[Default]), UsedName(removeLastChild,[Default]), UsedName(ExprContext,[Default]), UsedName(getClass,[Default]), UsedName(getAltNumber,[Default]), UsedName(addErrorNode,[Default]), UsedName(toString,[Default]), UsedName(setAltNumber,[Default]), UsedName(getRuleContexts,[Default]), UsedName(hashCode,[Default]), UsedName(getToken,[Default]), UsedName(stop,[Default]), UsedName(depth,[Default]), UsedName(parent,[Default]), UsedName(getParent,[Default]), UsedName(equals,[Default]), UsedName(EMPTY,[Default]), UsedName(MINUS,[Default]), UsedName(id,[Default]), UsedName(exception,[Default]), UsedName(copyFrom,[Default]), UsedName(start,[Default]), UsedName(SIGMA,[Default]), UsedName(getText,[Default]), UsedName(getChild,[Default]), UsedName(getPayload,[Default]), UsedName(expr,[Default]), UsedName(getTokens,[Default]), UsedName(Hw2;IntParserAntlr4$ExprContext;init;,[Default]), UsedName(children,[Default]), UsedName(PLUS,[Default]), UsedName(addAnyChild,[Default]), UsedName(POW,[Default]), UsedName(isEmpty,[Default]), UsedName(notify,[Default]), UsedName(addChild,[Default]), UsedName(getRuleIndex,[Default]), UsedName(integer,[Default]), UsedName(enterRule,[Default]), UsedName(exitRule,[Default]), UsedName(PI,[Default]), UsedName(setParent,[Default]), UsedName(accept,[Default]), UsedName(getSourceInterval,[Default]), UsedName(STAR,[Default]), UsedName(getChildCount,[Default]), UsedName(getStop,[Default]), UsedName(toInfoString,[Default]))) invalidates 3 classes due to The Hw2.IntParserAntlr4.ExprContext has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(invokingState,[Default]), UsedName(toStringTree,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(getRuleContext,[Default]), UsedName(getStart,[Default]), UsedName(removeLastChild,[Default]), UsedName(ExprContext,[Default]), UsedName(getClass,[Default]), UsedName(getAltNumber,[Default]), UsedName(addErrorNode,[Default]), UsedName(toString,[Default]), UsedName(setAltNumber,[Default]), UsedName(getRuleContexts,[Default]), UsedName(hashCode,[Default]), UsedName(getToken,[Default]), UsedName(stop,[Default]), UsedName(depth,[Default]), UsedName(parent,[Default]), UsedName(getParent,[Default]), UsedName(equals,[Default]), UsedName(EMPTY,[Default]), UsedName(MINUS,[Default]), UsedName(id,[Default]), UsedName(exception,[Default]), UsedName(copyFrom,[Default]), UsedName(start,[Default]), UsedName(SIGMA,[Default]), UsedName(getText,[Default]), UsedName(getChild,[Default]), UsedName(getPayload,[Default]), UsedName(expr,[Default]), UsedName(getTokens,[Default]), UsedName(Hw2;IntParserAntlr4$ExprContext;init;,[Default]), UsedName(children,[Default]), UsedName(PLUS,[Default]), UsedName(addAnyChild,[Default]), UsedName(POW,[Default]), UsedName(isEmpty,[Default]), UsedName(notify,[Default]), UsedName(addChild,[Default]), UsedName(getRuleIndex,[Default]), UsedName(integer,[Default]), UsedName(enterRule,[Default]), UsedName(exitRule,[Default]), UsedName(PI,[Default]), UsedName(setParent,[Default]), UsedName(accept,[Default]), UsedName(getSourceInterval,[Default]), UsedName(STAR,[Default]), UsedName(getChildCount,[Default]), UsedName(getStop,[Default]), UsedName(toInfoString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Hw2.IntParserAntlr4.ExprContext)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(Hw2.IntVisitor, Hw2.IntParser)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Hw2.LetRecParser...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Hw2.LetRecParser[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Hw2.LetRecParser)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of Hw2.LetRecParserDriver: Set(UsedName(ExprContext,[Default]), UsedName(program,[Default]), UsedName(expr,[Default]), UsedName(LetRecParser,[Default]), UsedName(Hw2;LetRecParser;init;,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of Hw2.LetRecVisitor: Set(UsedName(ExprContext,[Default]), UsedName(toString,[Default]), UsedName(id,[Default]), UsedName(IdContext,[Default]), UsedName(expr,[Default]), UsedName(IntegerContext,[Default]), UsedName(LetRecParser,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Hw2.LetRecParser,ModifiedNames(changes = UsedName(dumpDFA,[Default]), UsedName(LET,[Default]), UsedName(LETREC,[Default]), UsedName(reset,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(getTokenNames,[Default]), UsedName(ELSE,[Default]), UsedName(setTokenFactory,[Default]), UsedName(getRuleContext,[Default]), UsedName(isMatchedEOF,[Default]), UsedName(ExprContext,[Default]), UsedName(TraceListener,[Default]), UsedName(_ATN,[Default]), UsedName(getClass,[Default]), UsedName(setTokenStream,[Default]), UsedName(ProgramContext,[Default]), UsedName(unrollRecursionContexts,[Default]), UsedName(program,[Default]), UsedName(getATNWithBypassAlts,[Default]), UsedName(action,[Default]), UsedName(consume,[Default]), UsedName(inContext,[Default]), UsedName(RULE_expr,[Default]), UsedName(IN,[Default]), UsedName(setTrimParseTree,[Default]), UsedName(getExpectedTokensWithinCurrentRule,[Default]), UsedName(toString,[Default]), UsedName(getRuleNames,[Default]), UsedName(getContext,[Default]), UsedName(getErrorListeners,[Default]), UsedName(getVocabulary,[Default]), UsedName(enterRecursionRule,[Default]), UsedName(getExpectedTokens,[Default]), UsedName(getSourceName,[Default]), UsedName(getTokenFactory,[Default]), UsedName(hashCode,[Default]), UsedName(EOF,[Default]), UsedName(ruleNames,[Default]), UsedName(matchWildcard,[Default]), UsedName(getTokenErrorDisplay,[Default]), UsedName(getPrecedence,[Default]), UsedName(pushNewRecursionContext,[Default]), UsedName(isTrace,[Default]), UsedName(getNumberOfSyntaxErrors,[Default]), UsedName(RULE_id,[Default]), UsedName(getTrimParseTree,[Default]), UsedName(setBuildParseTree,[Default]), UsedName(removeParseListeners,[Default]), UsedName(IF,[Default]), UsedName(getCurrentToken,[Default]), UsedName(removeErrorListeners,[Default]), UsedName(addErrorListener,[Default]), UsedName(getRuleIndexMap,[Default]), UsedName(PROC,[Default]), UsedName(getATN,[Default]), UsedName(_sharedContextCache,[Default]), UsedName(RULE_integer,[Default]), UsedName(equals,[Default]), UsedName(ISZERO,[Default]), UsedName(MINUS,[Default]), UsedName(setInterpreter,[Default]), UsedName(createTerminalNode,[Default]), UsedName(id,[Default]), UsedName(getParseListeners,[Default]), UsedName(createErrorNode,[Default]), UsedName(notifyErrorListeners,[Default]), UsedName(IdContext,[Default]), UsedName(getTokenTypeMap,[Default]), UsedName(enterOuterAlt,[Default]), UsedName(TrimToSizeListener,[Default]), UsedName(setErrorHandler,[Default]), UsedName(getParseInfo,[Default]), UsedName(RULE_program,[Default]), UsedName(expr,[Default]), UsedName(getErrorHandler,[Default]), UsedName(compileParseTreePattern,[Default]), UsedName(tokenNames,[Default]), UsedName(setProfile,[Default]), UsedName(IntegerContext,[Default]), UsedName(isExpectedToken,[Default]), UsedName(precpred,[Default]), UsedName(getTokenStream,[Default]), UsedName(THEN,[Default]), UsedName(setInputStream,[Default]), UsedName(setContext,[Default]), UsedName(getGrammarFileName,[Default]), UsedName(getErrorHeader,[Default]), UsedName(PLUS,[Default]), UsedName(EQUAL,[Default]), UsedName(VOCABULARY,[Default]), UsedName(getInputStream,[Default]), UsedName(getDFAStrings,[Default]), UsedName(getInvokingContext,[Default]), UsedName(_serializedATN,[Default]), UsedName(EQ,[Default]), UsedName(notify,[Default]), UsedName(WS,[Default]), UsedName(getRuleIndex,[Default]), UsedName(LPAREN,[Default]), UsedName(integer,[Default]), UsedName(match,[Default]), UsedName(LetRecParser,[Default]), UsedName(sempred,[Default]), UsedName(enterRule,[Default]), UsedName(exitRule,[Default]), UsedName(getBuildParseTree,[Default]), UsedName(setTrace,[Default]), UsedName(getErrorListenerDispatch,[Default]), UsedName(removeErrorListener,[Default]), UsedName(getTokenType,[Default]), UsedName(getRuleInvocationStack,[Default]), UsedName(removeParseListener,[Default]), UsedName(INT,[Default]), UsedName(getState,[Default]), UsedName(Hw2;LetRecParser;init;,[Default]), UsedName(setState,[Default]), UsedName(ID,[Default]), UsedName(getInterpreter,[Default]), UsedName(_decisionToDFA,[Default]), UsedName(RPAREN,[Default]), UsedName(addParseListener,[Default]), UsedName(getSerializedATN,[Default]))) invalidates 3 classes due to The Hw2.LetRecParser has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(dumpDFA,[Default]), UsedName(LET,[Default]), UsedName(LETREC,[Default]), UsedName(reset,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(getTokenNames,[Default]), UsedName(ELSE,[Default]), UsedName(setTokenFactory,[Default]), UsedName(getRuleContext,[Default]), UsedName(isMatchedEOF,[Default]), UsedName(ExprContext,[Default]), UsedName(TraceListener,[Default]), UsedName(_ATN,[Default]), UsedName(getClass,[Default]), UsedName(setTokenStream,[Default]), UsedName(ProgramContext,[Default]), UsedName(unrollRecursionContexts,[Default]), UsedName(program,[Default]), UsedName(getATNWithBypassAlts,[Default]), UsedName(action,[Default]), UsedName(consume,[Default]), UsedName(inContext,[Default]), UsedName(RULE_expr,[Default]), UsedName(IN,[Default]), UsedName(setTrimParseTree,[Default]), UsedName(getExpectedTokensWithinCurrentRule,[Default]), UsedName(toString,[Default]), UsedName(getRuleNames,[Default]), UsedName(getContext,[Default]), UsedName(getErrorListeners,[Default]), UsedName(getVocabulary,[Default]), UsedName(enterRecursionRule,[Default]), UsedName(getExpectedTokens,[Default]), UsedName(getSourceName,[Default]), UsedName(getTokenFactory,[Default]), UsedName(hashCode,[Default]), UsedName(EOF,[Default]), UsedName(ruleNames,[Default]), UsedName(matchWildcard,[Default]), UsedName(getTokenErrorDisplay,[Default]), UsedName(getPrecedence,[Default]), UsedName(pushNewRecursionContext,[Default]), UsedName(isTrace,[Default]), UsedName(getNumberOfSyntaxErrors,[Default]), UsedName(RULE_id,[Default]), UsedName(getTrimParseTree,[Default]), UsedName(setBuildParseTree,[Default]), UsedName(removeParseListeners,[Default]), UsedName(IF,[Default]), UsedName(getCurrentToken,[Default]), UsedName(removeErrorListeners,[Default]), UsedName(addErrorListener,[Default]), UsedName(getRuleIndexMap,[Default]), UsedName(PROC,[Default]), UsedName(getATN,[Default]), UsedName(_sharedContextCache,[Default]), UsedName(RULE_integer,[Default]), UsedName(equals,[Default]), UsedName(ISZERO,[Default]), UsedName(MINUS,[Default]), UsedName(setInterpreter,[Default]), UsedName(createTerminalNode,[Default]), UsedName(id,[Default]), UsedName(getParseListeners,[Default]), UsedName(createErrorNode,[Default]), UsedName(notifyErrorListeners,[Default]), UsedName(IdContext,[Default]), UsedName(getTokenTypeMap,[Default]), UsedName(enterOuterAlt,[Default]), UsedName(TrimToSizeListener,[Default]), UsedName(setErrorHandler,[Default]), UsedName(getParseInfo,[Default]), UsedName(RULE_program,[Default]), UsedName(expr,[Default]), UsedName(getErrorHandler,[Default]), UsedName(compileParseTreePattern,[Default]), UsedName(tokenNames,[Default]), UsedName(setProfile,[Default]), UsedName(IntegerContext,[Default]), UsedName(isExpectedToken,[Default]), UsedName(precpred,[Default]), UsedName(getTokenStream,[Default]), UsedName(THEN,[Default]), UsedName(setInputStream,[Default]), UsedName(setContext,[Default]), UsedName(getGrammarFileName,[Default]), UsedName(getErrorHeader,[Default]), UsedName(PLUS,[Default]), UsedName(EQUAL,[Default]), UsedName(VOCABULARY,[Default]), UsedName(getInputStream,[Default]), UsedName(getDFAStrings,[Default]), UsedName(getInvokingContext,[Default]), UsedName(_serializedATN,[Default]), UsedName(EQ,[Default]), UsedName(notify,[Default]), UsedName(WS,[Default]), UsedName(getRuleIndex,[Default]), UsedName(LPAREN,[Default]), UsedName(integer,[Default]), UsedName(match,[Default]), UsedName(LetRecParser,[Default]), UsedName(sempred,[Default]), UsedName(enterRule,[Default]), UsedName(exitRule,[Default]), UsedName(getBuildParseTree,[Default]), UsedName(setTrace,[Default]), UsedName(getErrorListenerDispatch,[Default]), UsedName(removeErrorListener,[Default]), UsedName(getTokenType,[Default]), UsedName(getRuleInvocationStack,[Default]), UsedName(removeParseListener,[Default]), UsedName(INT,[Default]), UsedName(getState,[Default]), UsedName(Hw2;LetRecParser;init;,[Default]), UsedName(setState,[Default]), UsedName(ID,[Default]), UsedName(getInterpreter,[Default]), UsedName(_decisionToDFA,[Default]), UsedName(RPAREN,[Default]), UsedName(addParseListener,[Default]), UsedName(getSerializedATN,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Hw2.LetRecParser)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(Hw2.LetRecParserDriver, Hw2.LetRecVisitor)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Hw2.LetRecParserVisitor...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Hw2.LetRecParserVisitor[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Hw2.LetRecParserVisitor)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Hw2.LetRecParserVisitor,ModifiedNames(changes = UsedName(visitErrorNode,[Default]), UsedName(visit,[Default]), UsedName(visitInteger,[Default]), UsedName(visitExpr,[Default]), UsedName(visitTerminal,[Default]), UsedName(visitId,[Default]), UsedName(visitChildren,[Default]), UsedName(visitProgram,[Default]), UsedName(LetRecParserVisitor,[Default]))) invalidates 1 classes due to The Hw2.LetRecParserVisitor has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(visitErrorNode,[Default]), UsedName(visit,[Default]), UsedName(visitInteger,[Default]), UsedName(visitExpr,[Default]), UsedName(visitTerminal,[Default]), UsedName(visitId,[Default]), UsedName(visitChildren,[Default]), UsedName(visitProgram,[Default]), UsedName(LetRecParserVisitor,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Hw2.LetRecParserVisitor)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Hw2.IntParserAntlr4...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Hw2.IntParserAntlr4[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Hw2.IntParserAntlr4)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of Hw2.IntVisitor: Set(UsedName(IntParserAntlr4,[Default]), UsedName(ExprContext,[Default]), UsedName(toString,[Default]), UsedName(IdContext,[Default]), UsedName(expr,[Default]), UsedName(IntegerContext,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of Hw2.IntParser: Set(UsedName(IntParserAntlr4,[Default]), UsedName(ExprContext,[Default]), UsedName(program,[Default]), UsedName(expr,[Default]), UsedName(Hw2;IntParserAntlr4;init;,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Hw2.IntParserAntlr4,ModifiedNames(changes = UsedName(dumpDFA,[Default]), UsedName(reset,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(getTokenNames,[Default]), UsedName(setTokenFactory,[Default]), UsedName(IntParserAntlr4,[Default]), UsedName(getRuleContext,[Default]), UsedName(isMatchedEOF,[Default]), UsedName(ExprContext,[Default]), UsedName(TraceListener,[Default]), UsedName(_ATN,[Default]), UsedName(getClass,[Default]), UsedName(setTokenStream,[Default]), UsedName(ProgramContext,[Default]), UsedName(unrollRecursionContexts,[Default]), UsedName(program,[Default]), UsedName(getATNWithBypassAlts,[Default]), UsedName(action,[Default]), UsedName(consume,[Default]), UsedName(inContext,[Default]), UsedName(RULE_expr,[Default]), UsedName(setTrimParseTree,[Default]), UsedName(getExpectedTokensWithinCurrentRule,[Default]), UsedName(toString,[Default]), UsedName(getRuleNames,[Default]), UsedName(getContext,[Default]), UsedName(getErrorListeners,[Default]), UsedName(getVocabulary,[Default]), UsedName(enterRecursionRule,[Default]), UsedName(getExpectedTokens,[Default]), UsedName(getSourceName,[Default]), UsedName(getTokenFactory,[Default]), UsedName(hashCode,[Default]), UsedName(EOF,[Default]), UsedName(ruleNames,[Default]), UsedName(matchWildcard,[Default]), UsedName(getTokenErrorDisplay,[Default]), UsedName(getPrecedence,[Default]), UsedName(pushNewRecursionContext,[Default]), UsedName(isTrace,[Default]), UsedName(getNumberOfSyntaxErrors,[Default]), UsedName(RULE_id,[Default]), UsedName(getTrimParseTree,[Default]), UsedName(setBuildParseTree,[Default]), UsedName(removeParseListeners,[Default]), UsedName(getCurrentToken,[Default]), UsedName(removeErrorListeners,[Default]), UsedName(addErrorListener,[Default]), UsedName(getRuleIndexMap,[Default]), UsedName(getATN,[Default]), UsedName(_sharedContextCache,[Default]), UsedName(RULE_integer,[Default]), UsedName(equals,[Default]), UsedName(MINUS,[Default]), UsedName(setInterpreter,[Default]), UsedName(createTerminalNode,[Default]), UsedName(id,[Default]), UsedName(getParseListeners,[Default]), UsedName(createErrorNode,[Default]), UsedName(notifyErrorListeners,[Default]), UsedName(SIGMA,[Default]), UsedName(IdContext,[Default]), UsedName(getTokenTypeMap,[Default]), UsedName(enterOuterAlt,[Default]), UsedName(TrimToSizeListener,[Default]), UsedName(setErrorHandler,[Default]), UsedName(getParseInfo,[Default]), UsedName(RULE_program,[Default]), UsedName(expr,[Default]), UsedName(getErrorHandler,[Default]), UsedName(compileParseTreePattern,[Default]), UsedName(tokenNames,[Default]), UsedName(setProfile,[Default]), UsedName(IntegerContext,[Default]), UsedName(isExpectedToken,[Default]), UsedName(precpred,[Default]), UsedName(getTokenStream,[Default]), UsedName(setInputStream,[Default]), UsedName(setContext,[Default]), UsedName(getGrammarFileName,[Default]), UsedName(getErrorHeader,[Default]), UsedName(PLUS,[Default]), UsedName(POW,[Default]), UsedName(VOCABULARY,[Default]), UsedName(getInputStream,[Default]), UsedName(getDFAStrings,[Default]), UsedName(getInvokingContext,[Default]), UsedName(Hw2;IntParserAntlr4;init;,[Default]), UsedName(_serializedATN,[Default]), UsedName(notify,[Default]), UsedName(WS,[Default]), UsedName(getRuleIndex,[Default]), UsedName(integer,[Default]), UsedName(match,[Default]), UsedName(sempred,[Default]), UsedName(enterRule,[Default]), UsedName(exitRule,[Default]), UsedName(getBuildParseTree,[Default]), UsedName(PI,[Default]), UsedName(setTrace,[Default]), UsedName(getErrorListenerDispatch,[Default]), UsedName(removeErrorListener,[Default]), UsedName(getTokenType,[Default]), UsedName(getRuleInvocationStack,[Default]), UsedName(removeParseListener,[Default]), UsedName(INT,[Default]), UsedName(getState,[Default]), UsedName(STAR,[Default]), UsedName(setState,[Default]), UsedName(ID,[Default]), UsedName(getInterpreter,[Default]), UsedName(_decisionToDFA,[Default]), UsedName(addParseListener,[Default]), UsedName(getSerializedATN,[Default]))) invalidates 3 classes due to The Hw2.IntParserAntlr4 has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(dumpDFA,[Default]), UsedName(reset,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(getTokenNames,[Default]), UsedName(setTokenFactory,[Default]), UsedName(IntParserAntlr4,[Default]), UsedName(getRuleContext,[Default]), UsedName(isMatchedEOF,[Default]), UsedName(ExprContext,[Default]), UsedName(TraceListener,[Default]), UsedName(_ATN,[Default]), UsedName(getClass,[Default]), UsedName(setTokenStream,[Default]), UsedName(ProgramContext,[Default]), UsedName(unrollRecursionContexts,[Default]), UsedName(program,[Default]), UsedName(getATNWithBypassAlts,[Default]), UsedName(action,[Default]), UsedName(consume,[Default]), UsedName(inContext,[Default]), UsedName(RULE_expr,[Default]), UsedName(setTrimParseTree,[Default]), UsedName(getExpectedTokensWithinCurrentRule,[Default]), UsedName(toString,[Default]), UsedName(getRuleNames,[Default]), UsedName(getContext,[Default]), UsedName(getErrorListeners,[Default]), UsedName(getVocabulary,[Default]), UsedName(enterRecursionRule,[Default]), UsedName(getExpectedTokens,[Default]), UsedName(getSourceName,[Default]), UsedName(getTokenFactory,[Default]), UsedName(hashCode,[Default]), UsedName(EOF,[Default]), UsedName(ruleNames,[Default]), UsedName(matchWildcard,[Default]), UsedName(getTokenErrorDisplay,[Default]), UsedName(getPrecedence,[Default]), UsedName(pushNewRecursionContext,[Default]), UsedName(isTrace,[Default]), UsedName(getNumberOfSyntaxErrors,[Default]), UsedName(RULE_id,[Default]), UsedName(getTrimParseTree,[Default]), UsedName(setBuildParseTree,[Default]), UsedName(removeParseListeners,[Default]), UsedName(getCurrentToken,[Default]), UsedName(removeErrorListeners,[Default]), UsedName(addErrorListener,[Default]), UsedName(getRuleIndexMap,[Default]), UsedName(getATN,[Default]), UsedName(_sharedContextCache,[Default]), UsedName(RULE_integer,[Default]), UsedName(equals,[Default]), UsedName(MINUS,[Default]), UsedName(setInterpreter,[Default]), UsedName(createTerminalNode,[Default]), UsedName(id,[Default]), UsedName(getParseListeners,[Default]), UsedName(createErrorNode,[Default]), UsedName(notifyErrorListeners,[Default]), UsedName(SIGMA,[Default]), UsedName(IdContext,[Default]), UsedName(getTokenTypeMap,[Default]), UsedName(enterOuterAlt,[Default]), UsedName(TrimToSizeListener,[Default]), UsedName(setErrorHandler,[Default]), UsedName(getParseInfo,[Default]), UsedName(RULE_program,[Default]), UsedName(expr,[Default]), UsedName(getErrorHandler,[Default]), UsedName(compileParseTreePattern,[Default]), UsedName(tokenNames,[Default]), UsedName(setProfile,[Default]), UsedName(IntegerContext,[Default]), UsedName(isExpectedToken,[Default]), UsedName(precpred,[Default]), UsedName(getTokenStream,[Default]), UsedName(setInputStream,[Default]), UsedName(setContext,[Default]), UsedName(getGrammarFileName,[Default]), UsedName(getErrorHeader,[Default]), UsedName(PLUS,[Default]), UsedName(POW,[Default]), UsedName(VOCABULARY,[Default]), UsedName(getInputStream,[Default]), UsedName(getDFAStrings,[Default]), UsedName(getInvokingContext,[Default]), UsedName(Hw2;IntParserAntlr4;init;,[Default]), UsedName(_serializedATN,[Default]), UsedName(notify,[Default]), UsedName(WS,[Default]), UsedName(getRuleIndex,[Default]), UsedName(integer,[Default]), UsedName(match,[Default]), UsedName(sempred,[Default]), UsedName(enterRule,[Default]), UsedName(exitRule,[Default]), UsedName(getBuildParseTree,[Default]), UsedName(PI,[Default]), UsedName(setTrace,[Default]), UsedName(getErrorListenerDispatch,[Default]), UsedName(removeErrorListener,[Default]), UsedName(getTokenType,[Default]), UsedName(getRuleInvocationStack,[Default]), UsedName(removeParseListener,[Default]), UsedName(INT,[Default]), UsedName(getState,[Default]), UsedName(STAR,[Default]), UsedName(setState,[Default]), UsedName(ID,[Default]), UsedName(getInterpreter,[Default]), UsedName(_decisionToDFA,[Default]), UsedName(addParseListener,[Default]), UsedName(getSerializedATN,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Hw2.IntParserAntlr4)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(Hw2.IntVisitor, Hw2.IntParser)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Hw2.LetRecParserBaseVisitor...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Hw2.LetRecParserBaseVisitor[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding Hw2.LetRecVisitor by Hw2.LetRecParserBaseVisitor[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Hw2.LetRecParserBaseVisitor, Hw2.LetRecVisitor)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of Hw2.LetRecVisitor: Set(UsedName(toString,[Default]), UsedName(visit,[Default]), UsedName(visitExpr,[Default]), UsedName(LetRecParserBaseVisitor,[Default]), UsedName(visitId,[Default]), UsedName(Hw2;LetRecParserBaseVisitor;init;,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Hw2.LetRecParserBaseVisitor,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(visitErrorNode,[Default]), UsedName(getClass,[Default]), UsedName(toString,[Default]), UsedName(visit,[Default]), UsedName(visitInteger,[Default]), UsedName(hashCode,[Default]), UsedName(visitExpr,[Default]), UsedName(equals,[Default]), UsedName(visitTerminal,[Default]), UsedName(LetRecParserBaseVisitor,[Default]), UsedName(visitId,[Default]), UsedName(visitChildren,[Default]), UsedName(notify,[Default]), UsedName(Hw2;LetRecParserBaseVisitor;init;,[Default]), UsedName(visitProgram,[Default]))) invalidates 2 classes due to The Hw2.LetRecParserBaseVisitor has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(visitErrorNode,[Default]), UsedName(getClass,[Default]), UsedName(toString,[Default]), UsedName(visit,[Default]), UsedName(visitInteger,[Default]), UsedName(hashCode,[Default]), UsedName(visitExpr,[Default]), UsedName(equals,[Default]), UsedName(visitTerminal,[Default]), UsedName(LetRecParserBaseVisitor,[Default]), UsedName(visitId,[Default]), UsedName(visitChildren,[Default]), UsedName(notify,[Default]), UsedName(Hw2;LetRecParserBaseVisitor;init;,[Default]), UsedName(visitProgram,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Hw2.LetRecParserBaseVisitor, Hw2.LetRecVisitor)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(Hw2.LetRecVisitor)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Hw2.LetRecParser.ExprContext...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Hw2.LetRecParser.ExprContext[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Hw2.LetRecParser.ExprContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of Hw2.LetRecVisitor: Set(UsedName(ExprContext,[Default]), UsedName(toString,[Default]), UsedName(id,[Default]), UsedName(getText,[Default]), UsedName(getChild,[Default]), UsedName(expr,[Default]), UsedName(getChildCount,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of Hw2.LetRecParserDriver: Set(UsedName(ExprContext,[Default]), UsedName(expr,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Hw2.LetRecParser.ExprContext,ModifiedNames(changes = UsedName(invokingState,[Default]), UsedName(LET,[Default]), UsedName(toStringTree,[Default]), UsedName(LETREC,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(ELSE,[Default]), UsedName(getRuleContext,[Default]), UsedName(getStart,[Default]), UsedName(removeLastChild,[Default]), UsedName(ExprContext,[Default]), UsedName(getClass,[Default]), UsedName(getAltNumber,[Default]), UsedName(addErrorNode,[Default]), UsedName(IN,[Default]), UsedName(toString,[Default]), UsedName(setAltNumber,[Default]), UsedName(getRuleContexts,[Default]), UsedName(hashCode,[Default]), UsedName(getToken,[Default]), UsedName(stop,[Default]), UsedName(IF,[Default]), UsedName(depth,[Default]), UsedName(PROC,[Default]), UsedName(parent,[Default]), UsedName(getParent,[Default]), UsedName(equals,[Default]), UsedName(EMPTY,[Default]), UsedName(ISZERO,[Default]), UsedName(MINUS,[Default]), UsedName(id,[Default]), UsedName(exception,[Default]), UsedName(copyFrom,[Default]), UsedName(start,[Default]), UsedName(getText,[Default]), UsedName(getChild,[Default]), UsedName(getPayload,[Default]), UsedName(expr,[Default]), UsedName(getTokens,[Default]), UsedName(THEN,[Default]), UsedName(children,[Default]), UsedName(PLUS,[Default]), UsedName(addAnyChild,[Default]), UsedName(EQUAL,[Default]), UsedName(isEmpty,[Default]), UsedName(EQ,[Default]), UsedName(notify,[Default]), UsedName(addChild,[Default]), UsedName(getRuleIndex,[Default]), UsedName(LPAREN,[Default]), UsedName(integer,[Default]), UsedName(enterRule,[Default]), UsedName(exitRule,[Default]), UsedName(setParent,[Default]), UsedName(accept,[Default]), UsedName(getSourceInterval,[Default]), UsedName(getChildCount,[Default]), UsedName(Hw2;LetRecParser$ExprContext;init;,[Default]), UsedName(getStop,[Default]), UsedName(RPAREN,[Default]), UsedName(toInfoString,[Default]))) invalidates 3 classes due to The Hw2.LetRecParser.ExprContext has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(invokingState,[Default]), UsedName(LET,[Default]), UsedName(toStringTree,[Default]), UsedName(LETREC,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(ELSE,[Default]), UsedName(getRuleContext,[Default]), UsedName(getStart,[Default]), UsedName(removeLastChild,[Default]), UsedName(ExprContext,[Default]), UsedName(getClass,[Default]), UsedName(getAltNumber,[Default]), UsedName(addErrorNode,[Default]), UsedName(IN,[Default]), UsedName(toString,[Default]), UsedName(setAltNumber,[Default]), UsedName(getRuleContexts,[Default]), UsedName(hashCode,[Default]), UsedName(getToken,[Default]), UsedName(stop,[Default]), UsedName(IF,[Default]), UsedName(depth,[Default]), UsedName(PROC,[Default]), UsedName(parent,[Default]), UsedName(getParent,[Default]), UsedName(equals,[Default]), UsedName(EMPTY,[Default]), UsedName(ISZERO,[Default]), UsedName(MINUS,[Default]), UsedName(id,[Default]), UsedName(exception,[Default]), UsedName(copyFrom,[Default]), UsedName(start,[Default]), UsedName(getText,[Default]), UsedName(getChild,[Default]), UsedName(getPayload,[Default]), UsedName(expr,[Default]), UsedName(getTokens,[Default]), UsedName(THEN,[Default]), UsedName(children,[Default]), UsedName(PLUS,[Default]), UsedName(addAnyChild,[Default]), UsedName(EQUAL,[Default]), UsedName(isEmpty,[Default]), UsedName(EQ,[Default]), UsedName(notify,[Default]), UsedName(addChild,[Default]), UsedName(getRuleIndex,[Default]), UsedName(LPAREN,[Default]), UsedName(integer,[Default]), UsedName(enterRule,[Default]), UsedName(exitRule,[Default]), UsedName(setParent,[Default]), UsedName(accept,[Default]), UsedName(getSourceInterval,[Default]), UsedName(getChildCount,[Default]), UsedName(Hw2;LetRecParser$ExprContext;init;,[Default]), UsedName(getStop,[Default]), UsedName(RPAREN,[Default]), UsedName(toInfoString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Hw2.LetRecParser.ExprContext)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(Hw2.LetRecVisitor, Hw2.LetRecParserDriver)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Hw2.IntParserAntlr4Visitor...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Hw2.IntParserAntlr4Visitor[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Hw2.IntParserAntlr4Visitor)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Hw2.IntParserAntlr4Visitor,ModifiedNames(changes = UsedName(visitErrorNode,[Default]), UsedName(IntParserAntlr4Visitor,[Default]), UsedName(visit,[Default]), UsedName(visitInteger,[Default]), UsedName(visitExpr,[Default]), UsedName(visitTerminal,[Default]), UsedName(visitId,[Default]), UsedName(visitChildren,[Default]), UsedName(visitProgram,[Default]))) invalidates 1 classes due to The Hw2.IntParserAntlr4Visitor has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(visitErrorNode,[Default]), UsedName(IntParserAntlr4Visitor,[Default]), UsedName(visit,[Default]), UsedName(visitInteger,[Default]), UsedName(visitExpr,[Default]), UsedName(visitTerminal,[Default]), UsedName(visitId,[Default]), UsedName(visitChildren,[Default]), UsedName(visitProgram,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Hw2.IntParserAntlr4Visitor)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Hw2.PCall...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Hw2.PCall[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Hw2.PCall)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of Hw2.LetRecVisitor. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Hw2.PCall,ModifiedNames(changes = UsedName(finalize,[Default]))) invalidates 1 classes due to The Hw2.PCall has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(finalize,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Hw2.PCall)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Hw2.LetRecLexer...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Hw2.LetRecLexer[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Hw2.LetRecLexer)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of Hw2.LetRecParserDriver: Set(UsedName(Hw2;LetRecLexer;init;,[Default]), UsedName(LetRecLexer,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Hw2.LetRecLexer,ModifiedNames(changes = UsedName(LET,[Default]), UsedName(LETREC,[Default]), UsedName(reset,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(getTokenNames,[Default]), UsedName(ELSE,[Default]), UsedName(setTokenFactory,[Default]), UsedName(emitEOF,[Default]), UsedName(Hw2;LetRecLexer;init;,[Default]), UsedName(getType,[Default]), UsedName(_ATN,[Default]), UsedName(popMode,[Default]), UsedName(getClass,[Default]), UsedName(getChannel,[Default]), UsedName(action,[Default]), UsedName(IN,[Default]), UsedName(toString,[Default]), UsedName(getRuleNames,[Default]), UsedName(_input,[Default]), UsedName(getErrorListeners,[Default]), UsedName(getVocabulary,[Default]), UsedName(_mode,[Default]), UsedName(getSourceName,[Default]), UsedName(getTokenFactory,[Default]), UsedName(hashCode,[Default]), UsedName(EOF,[Default]), UsedName(emit,[Default]), UsedName(ruleNames,[Default]), UsedName(getTokenErrorDisplay,[Default]), UsedName(skip,[Default]), UsedName(HIDDEN,[Default]), UsedName(getToken,[Default]), UsedName(_tokenStartCharIndex,[Default]), UsedName(setChannel,[Default]), UsedName(setType,[Default]), UsedName(MIN_CHAR_VALUE,[Default]), UsedName(IF,[Default]), UsedName(getCharIndex,[Default]), UsedName(setToken,[Default]), UsedName(removeErrorListeners,[Default]), UsedName(getCharErrorDisplay,[Default]), UsedName(getCharPositionInLine,[Default]), UsedName(addErrorListener,[Default]), UsedName(getRuleIndexMap,[Default]), UsedName(getErrorDisplay,[Default]), UsedName(PROC,[Default]), UsedName(getATN,[Default]), UsedName(_sharedContextCache,[Default]), UsedName(setText,[Default]), UsedName(equals,[Default]), UsedName(ISZERO,[Default]), UsedName(MINUS,[Default]), UsedName(nextToken,[Default]), UsedName(setInterpreter,[Default]), UsedName(notifyListeners,[Default]), UsedName(SKIP,[Default]), UsedName(_modeStack,[Default]), UsedName(setCharPositionInLine,[Default]), UsedName(MORE,[Default]), UsedName(_tokenStartLine,[Default]), UsedName(mode,[Default]), UsedName(modeNames,[Default]), UsedName(_text,[Default]), UsedName(getTokenTypeMap,[Default]), UsedName(getText,[Default]), UsedName(getParseInfo,[Default]), UsedName(DEFAULT_TOKEN_CHANNEL,[Default]), UsedName(_tokenStartCharPositionInLine,[Default]), UsedName(tokenNames,[Default]), UsedName(getAllTokens,[Default]), UsedName(precpred,[Default]), UsedName(THEN,[Default]), UsedName(setInputStream,[Default]), UsedName(recover,[Default]), UsedName(getGrammarFileName,[Default]), UsedName(getErrorHeader,[Default]), UsedName(PLUS,[Default]), UsedName(EQUAL,[Default]), UsedName(VOCABULARY,[Default]), UsedName(getInputStream,[Default]), UsedName(getChannelNames,[Default]), UsedName(_token,[Default]), UsedName(_serializedATN,[Default]), UsedName(EQ,[Default]), UsedName(notify,[Default]), UsedName(DEFAULT_MODE,[Default]), UsedName(WS,[Default]), UsedName(LetRecLexer,[Default]), UsedName(LPAREN,[Default]), UsedName(pushMode,[Default]), UsedName(channelNames,[Default]), UsedName(sempred,[Default]), UsedName(getErrorListenerDispatch,[Default]), UsedName(removeErrorListener,[Default]), UsedName(getTokenType,[Default]), UsedName(_type,[Default]), UsedName(getModeNames,[Default]), UsedName(INT,[Default]), UsedName(getState,[Default]), UsedName(setState,[Default]), UsedName(_channel,[Default]), UsedName(setLine,[Default]), UsedName(ID,[Default]), UsedName(more,[Default]), UsedName(getInterpreter,[Default]), UsedName(MAX_CHAR_VALUE,[Default]), UsedName(getLine,[Default]), UsedName(_decisionToDFA,[Default]), UsedName(RPAREN,[Default]), UsedName(getSerializedATN,[Default]), UsedName(_hitEOF,[Default]))) invalidates 2 classes due to The Hw2.LetRecLexer has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(LET,[Default]), UsedName(LETREC,[Default]), UsedName(reset,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(getTokenNames,[Default]), UsedName(ELSE,[Default]), UsedName(setTokenFactory,[Default]), UsedName(emitEOF,[Default]), UsedName(Hw2;LetRecLexer;init;,[Default]), UsedName(getType,[Default]), UsedName(_ATN,[Default]), UsedName(popMode,[Default]), UsedName(getClass,[Default]), UsedName(getChannel,[Default]), UsedName(action,[Default]), UsedName(IN,[Default]), UsedName(toString,[Default]), UsedName(getRuleNames,[Default]), UsedName(_input,[Default]), UsedName(getErrorListeners,[Default]), UsedName(getVocabulary,[Default]), UsedName(_mode,[Default]), UsedName(getSourceName,[Default]), UsedName(getTokenFactory,[Default]), UsedName(hashCode,[Default]), UsedName(EOF,[Default]), UsedName(emit,[Default]), UsedName(ruleNames,[Default]), UsedName(getTokenErrorDisplay,[Default]), UsedName(skip,[Default]), UsedName(HIDDEN,[Default]), UsedName(getToken,[Default]), UsedName(_tokenStartCharIndex,[Default]), UsedName(setChannel,[Default]), UsedName(setType,[Default]), UsedName(MIN_CHAR_VALUE,[Default]), UsedName(IF,[Default]), UsedName(getCharIndex,[Default]), UsedName(setToken,[Default]), UsedName(removeErrorListeners,[Default]), UsedName(getCharErrorDisplay,[Default]), UsedName(getCharPositionInLine,[Default]), UsedName(addErrorListener,[Default]), UsedName(getRuleIndexMap,[Default]), UsedName(getErrorDisplay,[Default]), UsedName(PROC,[Default]), UsedName(getATN,[Default]), UsedName(_sharedContextCache,[Default]), UsedName(setText,[Default]), UsedName(equals,[Default]), UsedName(ISZERO,[Default]), UsedName(MINUS,[Default]), UsedName(nextToken,[Default]), UsedName(setInterpreter,[Default]), UsedName(notifyListeners,[Default]), UsedName(SKIP,[Default]), UsedName(_modeStack,[Default]), UsedName(setCharPositionInLine,[Default]), UsedName(MORE,[Default]), UsedName(_tokenStartLine,[Default]), UsedName(mode,[Default]), UsedName(modeNames,[Default]), UsedName(_text,[Default]), UsedName(getTokenTypeMap,[Default]), UsedName(getText,[Default]), UsedName(getParseInfo,[Default]), UsedName(DEFAULT_TOKEN_CHANNEL,[Default]), UsedName(_tokenStartCharPositionInLine,[Default]), UsedName(tokenNames,[Default]), UsedName(getAllTokens,[Default]), UsedName(precpred,[Default]), UsedName(THEN,[Default]), UsedName(setInputStream,[Default]), UsedName(recover,[Default]), UsedName(getGrammarFileName,[Default]), UsedName(getErrorHeader,[Default]), UsedName(PLUS,[Default]), UsedName(EQUAL,[Default]), UsedName(VOCABULARY,[Default]), UsedName(getInputStream,[Default]), UsedName(getChannelNames,[Default]), UsedName(_token,[Default]), UsedName(_serializedATN,[Default]), UsedName(EQ,[Default]), UsedName(notify,[Default]), UsedName(DEFAULT_MODE,[Default]), UsedName(WS,[Default]), UsedName(LetRecLexer,[Default]), UsedName(LPAREN,[Default]), UsedName(pushMode,[Default]), UsedName(channelNames,[Default]), UsedName(sempred,[Default]), UsedName(getErrorListenerDispatch,[Default]), UsedName(removeErrorListener,[Default]), UsedName(getTokenType,[Default]), UsedName(_type,[Default]), UsedName(getModeNames,[Default]), UsedName(INT,[Default]), UsedName(getState,[Default]), UsedName(setState,[Default]), UsedName(_channel,[Default]), UsedName(setLine,[Default]), UsedName(ID,[Default]), UsedName(more,[Default]), UsedName(getInterpreter,[Default]), UsedName(MAX_CHAR_VALUE,[Default]), UsedName(getLine,[Default]), UsedName(_decisionToDFA,[Default]), UsedName(RPAREN,[Default]), UsedName(getSerializedATN,[Default]), UsedName(_hitEOF,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Hw2.LetRecLexer)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(Hw2.LetRecParserDriver)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Hw2.IntLexer...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Hw2.IntLexer[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Hw2.IntLexer)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of Hw2.IntParser: Set(UsedName(Hw2;IntLexer;init;,[Default]), UsedName(IntLexer,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Hw2.IntLexer,ModifiedNames(changes = UsedName(reset,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(getTokenNames,[Default]), UsedName(setTokenFactory,[Default]), UsedName(emitEOF,[Default]), UsedName(getType,[Default]), UsedName(_ATN,[Default]), UsedName(popMode,[Default]), UsedName(getClass,[Default]), UsedName(getChannel,[Default]), UsedName(action,[Default]), UsedName(toString,[Default]), UsedName(getRuleNames,[Default]), UsedName(_input,[Default]), UsedName(getErrorListeners,[Default]), UsedName(getVocabulary,[Default]), UsedName(_mode,[Default]), UsedName(getSourceName,[Default]), UsedName(getTokenFactory,[Default]), UsedName(hashCode,[Default]), UsedName(EOF,[Default]), UsedName(emit,[Default]), UsedName(ruleNames,[Default]), UsedName(getTokenErrorDisplay,[Default]), UsedName(skip,[Default]), UsedName(HIDDEN,[Default]), UsedName(getToken,[Default]), UsedName(_tokenStartCharIndex,[Default]), UsedName(setChannel,[Default]), UsedName(Hw2;IntLexer;init;,[Default]), UsedName(setType,[Default]), UsedName(IntLexer,[Default]), UsedName(MIN_CHAR_VALUE,[Default]), UsedName(getCharIndex,[Default]), UsedName(setToken,[Default]), UsedName(removeErrorListeners,[Default]), UsedName(getCharErrorDisplay,[Default]), UsedName(getCharPositionInLine,[Default]), UsedName(addErrorListener,[Default]), UsedName(getRuleIndexMap,[Default]), UsedName(getErrorDisplay,[Default]), UsedName(getATN,[Default]), UsedName(_sharedContextCache,[Default]), UsedName(setText,[Default]), UsedName(equals,[Default]), UsedName(MINUS,[Default]), UsedName(nextToken,[Default]), UsedName(setInterpreter,[Default]), UsedName(notifyListeners,[Default]), UsedName(SKIP,[Default]), UsedName(_modeStack,[Default]), UsedName(setCharPositionInLine,[Default]), UsedName(MORE,[Default]), UsedName(_tokenStartLine,[Default]), UsedName(mode,[Default]), UsedName(SIGMA,[Default]), UsedName(modeNames,[Default]), UsedName(_text,[Default]), UsedName(getTokenTypeMap,[Default]), UsedName(getText,[Default]), UsedName(getParseInfo,[Default]), UsedName(DEFAULT_TOKEN_CHANNEL,[Default]), UsedName(_tokenStartCharPositionInLine,[Default]), UsedName(tokenNames,[Default]), UsedName(getAllTokens,[Default]), UsedName(precpred,[Default]), UsedName(setInputStream,[Default]), UsedName(recover,[Default]), UsedName(getGrammarFileName,[Default]), UsedName(getErrorHeader,[Default]), UsedName(PLUS,[Default]), UsedName(POW,[Default]), UsedName(VOCABULARY,[Default]), UsedName(getInputStream,[Default]), UsedName(getChannelNames,[Default]), UsedName(_token,[Default]), UsedName(_serializedATN,[Default]), UsedName(notify,[Default]), UsedName(DEFAULT_MODE,[Default]), UsedName(WS,[Default]), UsedName(pushMode,[Default]), UsedName(channelNames,[Default]), UsedName(sempred,[Default]), UsedName(PI,[Default]), UsedName(getErrorListenerDispatch,[Default]), UsedName(removeErrorListener,[Default]), UsedName(getTokenType,[Default]), UsedName(_type,[Default]), UsedName(getModeNames,[Default]), UsedName(INT,[Default]), UsedName(getState,[Default]), UsedName(STAR,[Default]), UsedName(setState,[Default]), UsedName(_channel,[Default]), UsedName(setLine,[Default]), UsedName(ID,[Default]), UsedName(more,[Default]), UsedName(getInterpreter,[Default]), UsedName(MAX_CHAR_VALUE,[Default]), UsedName(getLine,[Default]), UsedName(_decisionToDFA,[Default]), UsedName(getSerializedATN,[Default]), UsedName(_hitEOF,[Default]))) invalidates 2 classes due to The Hw2.IntLexer has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(reset,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(getTokenNames,[Default]), UsedName(setTokenFactory,[Default]), UsedName(emitEOF,[Default]), UsedName(getType,[Default]), UsedName(_ATN,[Default]), UsedName(popMode,[Default]), UsedName(getClass,[Default]), UsedName(getChannel,[Default]), UsedName(action,[Default]), UsedName(toString,[Default]), UsedName(getRuleNames,[Default]), UsedName(_input,[Default]), UsedName(getErrorListeners,[Default]), UsedName(getVocabulary,[Default]), UsedName(_mode,[Default]), UsedName(getSourceName,[Default]), UsedName(getTokenFactory,[Default]), UsedName(hashCode,[Default]), UsedName(EOF,[Default]), UsedName(emit,[Default]), UsedName(ruleNames,[Default]), UsedName(getTokenErrorDisplay,[Default]), UsedName(skip,[Default]), UsedName(HIDDEN,[Default]), UsedName(getToken,[Default]), UsedName(_tokenStartCharIndex,[Default]), UsedName(setChannel,[Default]), UsedName(Hw2;IntLexer;init;,[Default]), UsedName(setType,[Default]), UsedName(IntLexer,[Default]), UsedName(MIN_CHAR_VALUE,[Default]), UsedName(getCharIndex,[Default]), UsedName(setToken,[Default]), UsedName(removeErrorListeners,[Default]), UsedName(getCharErrorDisplay,[Default]), UsedName(getCharPositionInLine,[Default]), UsedName(addErrorListener,[Default]), UsedName(getRuleIndexMap,[Default]), UsedName(getErrorDisplay,[Default]), UsedName(getATN,[Default]), UsedName(_sharedContextCache,[Default]), UsedName(setText,[Default]), UsedName(equals,[Default]), UsedName(MINUS,[Default]), UsedName(nextToken,[Default]), UsedName(setInterpreter,[Default]), UsedName(notifyListeners,[Default]), UsedName(SKIP,[Default]), UsedName(_modeStack,[Default]), UsedName(setCharPositionInLine,[Default]), UsedName(MORE,[Default]), UsedName(_tokenStartLine,[Default]), UsedName(mode,[Default]), UsedName(SIGMA,[Default]), UsedName(modeNames,[Default]), UsedName(_text,[Default]), UsedName(getTokenTypeMap,[Default]), UsedName(getText,[Default]), UsedName(getParseInfo,[Default]), UsedName(DEFAULT_TOKEN_CHANNEL,[Default]), UsedName(_tokenStartCharPositionInLine,[Default]), UsedName(tokenNames,[Default]), UsedName(getAllTokens,[Default]), UsedName(precpred,[Default]), UsedName(setInputStream,[Default]), UsedName(recover,[Default]), UsedName(getGrammarFileName,[Default]), UsedName(getErrorHeader,[Default]), UsedName(PLUS,[Default]), UsedName(POW,[Default]), UsedName(VOCABULARY,[Default]), UsedName(getInputStream,[Default]), UsedName(getChannelNames,[Default]), UsedName(_token,[Default]), UsedName(_serializedATN,[Default]), UsedName(notify,[Default]), UsedName(DEFAULT_MODE,[Default]), UsedName(WS,[Default]), UsedName(pushMode,[Default]), UsedName(channelNames,[Default]), UsedName(sempred,[Default]), UsedName(PI,[Default]), UsedName(getErrorListenerDispatch,[Default]), UsedName(removeErrorListener,[Default]), UsedName(getTokenType,[Default]), UsedName(_type,[Default]), UsedName(getModeNames,[Default]), UsedName(INT,[Default]), UsedName(getState,[Default]), UsedName(STAR,[Default]), UsedName(setState,[Default]), UsedName(_channel,[Default]), UsedName(setLine,[Default]), UsedName(ID,[Default]), UsedName(more,[Default]), UsedName(getInterpreter,[Default]), UsedName(MAX_CHAR_VALUE,[Default]), UsedName(getLine,[Default]), UsedName(_decisionToDFA,[Default]), UsedName(getSerializedATN,[Default]), UsedName(_hitEOF,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Hw2.IntLexer)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(Hw2.IntParser)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Hw2.IntParserAntlr4.ProgramContext...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Hw2.IntParserAntlr4.ProgramContext[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Hw2.IntParserAntlr4.ProgramContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Hw2.IntParserAntlr4.ProgramContext,ModifiedNames(changes = UsedName(invokingState,[Default]), UsedName(toStringTree,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(getRuleContext,[Default]), UsedName(getStart,[Default]), UsedName(removeLastChild,[Default]), UsedName(getClass,[Default]), UsedName(getAltNumber,[Default]), UsedName(addErrorNode,[Default]), UsedName(ProgramContext,[Default]), UsedName(toString,[Default]), UsedName(setAltNumber,[Default]), UsedName(getRuleContexts,[Default]), UsedName(hashCode,[Default]), UsedName(EOF,[Default]), UsedName(getToken,[Default]), UsedName(stop,[Default]), UsedName(depth,[Default]), UsedName(parent,[Default]), UsedName(getParent,[Default]), UsedName(equals,[Default]), UsedName(EMPTY,[Default]), UsedName(exception,[Default]), UsedName(copyFrom,[Default]), UsedName(start,[Default]), UsedName(getText,[Default]), UsedName(getChild,[Default]), UsedName(getPayload,[Default]), UsedName(expr,[Default]), UsedName(getTokens,[Default]), UsedName(children,[Default]), UsedName(addAnyChild,[Default]), UsedName(isEmpty,[Default]), UsedName(notify,[Default]), UsedName(addChild,[Default]), UsedName(getRuleIndex,[Default]), UsedName(enterRule,[Default]), UsedName(exitRule,[Default]), UsedName(setParent,[Default]), UsedName(accept,[Default]), UsedName(getSourceInterval,[Default]), UsedName(Hw2;IntParserAntlr4$ProgramContext;init;,[Default]), UsedName(getChildCount,[Default]), UsedName(getStop,[Default]), UsedName(toInfoString,[Default]))) invalidates 1 classes due to The Hw2.IntParserAntlr4.ProgramContext has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(invokingState,[Default]), UsedName(toStringTree,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(getRuleContext,[Default]), UsedName(getStart,[Default]), UsedName(removeLastChild,[Default]), UsedName(getClass,[Default]), UsedName(getAltNumber,[Default]), UsedName(addErrorNode,[Default]), UsedName(ProgramContext,[Default]), UsedName(toString,[Default]), UsedName(setAltNumber,[Default]), UsedName(getRuleContexts,[Default]), UsedName(hashCode,[Default]), UsedName(EOF,[Default]), UsedName(getToken,[Default]), UsedName(stop,[Default]), UsedName(depth,[Default]), UsedName(parent,[Default]), UsedName(getParent,[Default]), UsedName(equals,[Default]), UsedName(EMPTY,[Default]), UsedName(exception,[Default]), UsedName(copyFrom,[Default]), UsedName(start,[Default]), UsedName(getText,[Default]), UsedName(getChild,[Default]), UsedName(getPayload,[Default]), UsedName(expr,[Default]), UsedName(getTokens,[Default]), UsedName(children,[Default]), UsedName(addAnyChild,[Default]), UsedName(isEmpty,[Default]), UsedName(notify,[Default]), UsedName(addChild,[Default]), UsedName(getRuleIndex,[Default]), UsedName(enterRule,[Default]), UsedName(exitRule,[Default]), UsedName(setParent,[Default]), UsedName(accept,[Default]), UsedName(getSourceInterval,[Default]), UsedName(Hw2;IntParserAntlr4$ProgramContext;init;,[Default]), UsedName(getChildCount,[Default]), UsedName(getStop,[Default]), UsedName(toInfoString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Hw2.IntParserAntlr4.ProgramContext)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Hw2.IntParserAntlr4.IdContext...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Hw2.IntParserAntlr4.IdContext[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Hw2.IntParserAntlr4.IdContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of Hw2.IntVisitor: Set(UsedName(toString,[Default]), UsedName(IdContext,[Default]), UsedName(getText,[Default]), UsedName(getChild,[Default]), UsedName(getChildCount,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Hw2.IntParserAntlr4.IdContext,ModifiedNames(changes = UsedName(invokingState,[Default]), UsedName(toStringTree,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(getRuleContext,[Default]), UsedName(getStart,[Default]), UsedName(removeLastChild,[Default]), UsedName(getClass,[Default]), UsedName(getAltNumber,[Default]), UsedName(addErrorNode,[Default]), UsedName(toString,[Default]), UsedName(setAltNumber,[Default]), UsedName(getRuleContexts,[Default]), UsedName(hashCode,[Default]), UsedName(getToken,[Default]), UsedName(stop,[Default]), UsedName(depth,[Default]), UsedName(parent,[Default]), UsedName(getParent,[Default]), UsedName(equals,[Default]), UsedName(EMPTY,[Default]), UsedName(exception,[Default]), UsedName(copyFrom,[Default]), UsedName(start,[Default]), UsedName(IdContext,[Default]), UsedName(getText,[Default]), UsedName(getChild,[Default]), UsedName(getPayload,[Default]), UsedName(getTokens,[Default]), UsedName(Hw2;IntParserAntlr4$IdContext;init;,[Default]), UsedName(children,[Default]), UsedName(addAnyChild,[Default]), UsedName(isEmpty,[Default]), UsedName(notify,[Default]), UsedName(addChild,[Default]), UsedName(getRuleIndex,[Default]), UsedName(enterRule,[Default]), UsedName(exitRule,[Default]), UsedName(setParent,[Default]), UsedName(accept,[Default]), UsedName(getSourceInterval,[Default]), UsedName(getChildCount,[Default]), UsedName(ID,[Default]), UsedName(getStop,[Default]), UsedName(toInfoString,[Default]))) invalidates 2 classes due to The Hw2.IntParserAntlr4.IdContext has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(invokingState,[Default]), UsedName(toStringTree,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(getRuleContext,[Default]), UsedName(getStart,[Default]), UsedName(removeLastChild,[Default]), UsedName(getClass,[Default]), UsedName(getAltNumber,[Default]), UsedName(addErrorNode,[Default]), UsedName(toString,[Default]), UsedName(setAltNumber,[Default]), UsedName(getRuleContexts,[Default]), UsedName(hashCode,[Default]), UsedName(getToken,[Default]), UsedName(stop,[Default]), UsedName(depth,[Default]), UsedName(parent,[Default]), UsedName(getParent,[Default]), UsedName(equals,[Default]), UsedName(EMPTY,[Default]), UsedName(exception,[Default]), UsedName(copyFrom,[Default]), UsedName(start,[Default]), UsedName(IdContext,[Default]), UsedName(getText,[Default]), UsedName(getChild,[Default]), UsedName(getPayload,[Default]), UsedName(getTokens,[Default]), UsedName(Hw2;IntParserAntlr4$IdContext;init;,[Default]), UsedName(children,[Default]), UsedName(addAnyChild,[Default]), UsedName(isEmpty,[Default]), UsedName(notify,[Default]), UsedName(addChild,[Default]), UsedName(getRuleIndex,[Default]), UsedName(enterRule,[Default]), UsedName(exitRule,[Default]), UsedName(setParent,[Default]), UsedName(accept,[Default]), UsedName(getSourceInterval,[Default]), UsedName(getChildCount,[Default]), UsedName(ID,[Default]), UsedName(getStop,[Default]), UsedName(toInfoString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Hw2.IntParserAntlr4.IdContext)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(Hw2.IntVisitor)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Hw2.IntParserAntlr4BaseVisitor...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Hw2.IntParserAntlr4BaseVisitor[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding Hw2.IntVisitor by Hw2.IntParserAntlr4BaseVisitor[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Hw2.IntVisitor, Hw2.IntParserAntlr4BaseVisitor)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of Hw2.IntVisitor: Set(UsedName(Hw2;IntParserAntlr4BaseVisitor;init;,[Default]), UsedName(toString,[Default]), UsedName(visit,[Default]), UsedName(IntParserAntlr4BaseVisitor,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Hw2.IntParserAntlr4BaseVisitor,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(visitErrorNode,[Default]), UsedName(getClass,[Default]), UsedName(Hw2;IntParserAntlr4BaseVisitor;init;,[Default]), UsedName(toString,[Default]), UsedName(visit,[Default]), UsedName(visitInteger,[Default]), UsedName(hashCode,[Default]), UsedName(visitExpr,[Default]), UsedName(equals,[Default]), UsedName(visitTerminal,[Default]), UsedName(visitId,[Default]), UsedName(visitChildren,[Default]), UsedName(notify,[Default]), UsedName(visitProgram,[Default]), UsedName(IntParserAntlr4BaseVisitor,[Default]))) invalidates 2 classes due to The Hw2.IntParserAntlr4BaseVisitor has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(visitErrorNode,[Default]), UsedName(getClass,[Default]), UsedName(Hw2;IntParserAntlr4BaseVisitor;init;,[Default]), UsedName(toString,[Default]), UsedName(visit,[Default]), UsedName(visitInteger,[Default]), UsedName(hashCode,[Default]), UsedName(visitExpr,[Default]), UsedName(equals,[Default]), UsedName(visitTerminal,[Default]), UsedName(visitId,[Default]), UsedName(visitChildren,[Default]), UsedName(notify,[Default]), UsedName(visitProgram,[Default]), UsedName(IntParserAntlr4BaseVisitor,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Hw2.IntVisitor, Hw2.IntParserAntlr4BaseVisitor)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(Hw2.IntVisitor)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Hw2.LetRecParser.IntegerContext...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Hw2.LetRecParser.IntegerContext[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Hw2.LetRecParser.IntegerContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of Hw2.LetRecVisitor: Set(UsedName(toString,[Default]), UsedName(getText,[Default]), UsedName(getChild,[Default]), UsedName(IntegerContext,[Default]), UsedName(getChildCount,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Hw2.LetRecParser.IntegerContext,ModifiedNames(changes = UsedName(invokingState,[Default]), UsedName(toStringTree,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(getRuleContext,[Default]), UsedName(getStart,[Default]), UsedName(removeLastChild,[Default]), UsedName(getClass,[Default]), UsedName(getAltNumber,[Default]), UsedName(addErrorNode,[Default]), UsedName(toString,[Default]), UsedName(setAltNumber,[Default]), UsedName(getRuleContexts,[Default]), UsedName(hashCode,[Default]), UsedName(getToken,[Default]), UsedName(stop,[Default]), UsedName(depth,[Default]), UsedName(parent,[Default]), UsedName(getParent,[Default]), UsedName(equals,[Default]), UsedName(EMPTY,[Default]), UsedName(exception,[Default]), UsedName(copyFrom,[Default]), UsedName(start,[Default]), UsedName(getText,[Default]), UsedName(getChild,[Default]), UsedName(getPayload,[Default]), UsedName(getTokens,[Default]), UsedName(IntegerContext,[Default]), UsedName(children,[Default]), UsedName(addAnyChild,[Default]), UsedName(isEmpty,[Default]), UsedName(notify,[Default]), UsedName(addChild,[Default]), UsedName(getRuleIndex,[Default]), UsedName(enterRule,[Default]), UsedName(exitRule,[Default]), UsedName(setParent,[Default]), UsedName(accept,[Default]), UsedName(getSourceInterval,[Default]), UsedName(INT,[Default]), UsedName(getChildCount,[Default]), UsedName(getStop,[Default]), UsedName(toInfoString,[Default]), UsedName(Hw2;LetRecParser$IntegerContext;init;,[Default]))) invalidates 2 classes due to The Hw2.LetRecParser.IntegerContext has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(invokingState,[Default]), UsedName(toStringTree,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(getRuleContext,[Default]), UsedName(getStart,[Default]), UsedName(removeLastChild,[Default]), UsedName(getClass,[Default]), UsedName(getAltNumber,[Default]), UsedName(addErrorNode,[Default]), UsedName(toString,[Default]), UsedName(setAltNumber,[Default]), UsedName(getRuleContexts,[Default]), UsedName(hashCode,[Default]), UsedName(getToken,[Default]), UsedName(stop,[Default]), UsedName(depth,[Default]), UsedName(parent,[Default]), UsedName(getParent,[Default]), UsedName(equals,[Default]), UsedName(EMPTY,[Default]), UsedName(exception,[Default]), UsedName(copyFrom,[Default]), UsedName(start,[Default]), UsedName(getText,[Default]), UsedName(getChild,[Default]), UsedName(getPayload,[Default]), UsedName(getTokens,[Default]), UsedName(IntegerContext,[Default]), UsedName(children,[Default]), UsedName(addAnyChild,[Default]), UsedName(isEmpty,[Default]), UsedName(notify,[Default]), UsedName(addChild,[Default]), UsedName(getRuleIndex,[Default]), UsedName(enterRule,[Default]), UsedName(exitRule,[Default]), UsedName(setParent,[Default]), UsedName(accept,[Default]), UsedName(getSourceInterval,[Default]), UsedName(INT,[Default]), UsedName(getChildCount,[Default]), UsedName(getStop,[Default]), UsedName(toInfoString,[Default]), UsedName(Hw2;LetRecParser$IntegerContext;init;,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Hw2.LetRecParser.IntegerContext)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(Hw2.LetRecVisitor)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Hw2.LetRecParser.ProgramContext...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Hw2.LetRecParser.ProgramContext[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Hw2.LetRecParser.ProgramContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Hw2.LetRecParser.ProgramContext,ModifiedNames(changes = UsedName(invokingState,[Default]), UsedName(toStringTree,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(getRuleContext,[Default]), UsedName(getStart,[Default]), UsedName(removeLastChild,[Default]), UsedName(getClass,[Default]), UsedName(getAltNumber,[Default]), UsedName(addErrorNode,[Default]), UsedName(ProgramContext,[Default]), UsedName(toString,[Default]), UsedName(setAltNumber,[Default]), UsedName(getRuleContexts,[Default]), UsedName(hashCode,[Default]), UsedName(EOF,[Default]), UsedName(getToken,[Default]), UsedName(stop,[Default]), UsedName(depth,[Default]), UsedName(parent,[Default]), UsedName(getParent,[Default]), UsedName(equals,[Default]), UsedName(EMPTY,[Default]), UsedName(exception,[Default]), UsedName(copyFrom,[Default]), UsedName(start,[Default]), UsedName(getText,[Default]), UsedName(getChild,[Default]), UsedName(Hw2;LetRecParser$ProgramContext;init;,[Default]), UsedName(getPayload,[Default]), UsedName(expr,[Default]), UsedName(getTokens,[Default]), UsedName(children,[Default]), UsedName(addAnyChild,[Default]), UsedName(isEmpty,[Default]), UsedName(notify,[Default]), UsedName(addChild,[Default]), UsedName(getRuleIndex,[Default]), UsedName(enterRule,[Default]), UsedName(exitRule,[Default]), UsedName(setParent,[Default]), UsedName(accept,[Default]), UsedName(getSourceInterval,[Default]), UsedName(getChildCount,[Default]), UsedName(getStop,[Default]), UsedName(toInfoString,[Default]))) invalidates 1 classes due to The Hw2.LetRecParser.ProgramContext has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(invokingState,[Default]), UsedName(toStringTree,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(getRuleContext,[Default]), UsedName(getStart,[Default]), UsedName(removeLastChild,[Default]), UsedName(getClass,[Default]), UsedName(getAltNumber,[Default]), UsedName(addErrorNode,[Default]), UsedName(ProgramContext,[Default]), UsedName(toString,[Default]), UsedName(setAltNumber,[Default]), UsedName(getRuleContexts,[Default]), UsedName(hashCode,[Default]), UsedName(EOF,[Default]), UsedName(getToken,[Default]), UsedName(stop,[Default]), UsedName(depth,[Default]), UsedName(parent,[Default]), UsedName(getParent,[Default]), UsedName(equals,[Default]), UsedName(EMPTY,[Default]), UsedName(exception,[Default]), UsedName(copyFrom,[Default]), UsedName(start,[Default]), UsedName(getText,[Default]), UsedName(getChild,[Default]), UsedName(Hw2;LetRecParser$ProgramContext;init;,[Default]), UsedName(getPayload,[Default]), UsedName(expr,[Default]), UsedName(getTokens,[Default]), UsedName(children,[Default]), UsedName(addAnyChild,[Default]), UsedName(isEmpty,[Default]), UsedName(notify,[Default]), UsedName(addChild,[Default]), UsedName(getRuleIndex,[Default]), UsedName(enterRule,[Default]), UsedName(exitRule,[Default]), UsedName(setParent,[Default]), UsedName(accept,[Default]), UsedName(getSourceInterval,[Default]), UsedName(getChildCount,[Default]), UsedName(getStop,[Default]), UsedName(toInfoString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Hw2.LetRecParser.ProgramContext)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Hw2.IntVal...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Hw2.IntVal[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Hw2.IntVal)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Hw2.IntVal,ModifiedNames(changes = UsedName(finalize,[Default]))) invalidates 1 classes due to The Hw2.IntVal has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(finalize,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Hw2.IntVal)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set(Hw2.LetRecParserDriver, Hw2.IntVisitor, Hw2.IntParser, Hw2.LetRecVisitor)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Hw2.LetRecParserDriver, Hw2.IntVisitor, Hw2.IntParser, Hw2.LetRecVisitor[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding Hw2.LetRecInterpreter by Hw2.LetRecParserDriver[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding Hw2.IntInterpreter by Hw2.IntParser[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding Hw2.Hw2App by Hw2.IntParser[0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNo classes were invalidated.[0m
